<?xml version="1.0" encoding="UTF-8" ?>
<pbj-schema xmlns="http://gdbots.io/pbj/xsd"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://gdbots.io/pbj/xsd http://gdbots.io/pbj/xsd/schema.xsd">

  <schema id="pbj:gdbots:iam:mixin:browser-app:1-0-4" mixin="true" extends="gdbots:iam:mixin:app:v1">
    <fields>
      <field name="fcm_api_key" type="text">
        <description>
          An encrypted value of legacy-server-key that can be obtained from the cloud messaging tab of the Firebase
          console.
          @link https://firebase.google.com/docs/cloud-messaging/auth-server
        </description>
      </field>
      <field name="fcm_auth_config" type="text">
        <description>
          An encrypted value of the service account file that can be obtained from the service accounts tab of the Firebase
          console.
          @link https://firebase.google.com/docs/cloud-messaging/auth-server
        </description>
      </field>
      <field name="fcm_app_id" type="string" pattern="^[\w:]+$">
        <description>
          A unique identifier used to identify an app within a Firebase project that can be obtained
          from the Firebase console.
          @link https://firebase.google.com/docs/web/setup?authuser=0#config-object
        </description>
      </field>
      <field name="fcm_project_id" type="string" format="slug">
        <description>
          A unique identifier for your Firebase project, used in requests to the FCM v1 HTTP endpoint.
          @link https://firebase.google.com/docs/cloud-messaging/concept-options#projectid
        </description>
      </field>
      <field name="fcm_sender_id" type="string" pattern="^\d+$">
        <description>
          A unique numerical value created when you create your Firebase project.
          @link https://firebase.google.com/docs/cloud-messaging/concept-options#senderid
        </description>
      </field>
      <field name="fcm_web_api_key" type="string" pattern="^[\w\.-]+$">
        <description>
          An un-encrypted key that can be obtained from the cloud messaging tab of the Firebase console.
        </description>
      </field>
      <field name="braze_api_key" type="text">
        <description>
          An encrypted API key for the Braze messaging service.
        </description>
      </field>
      <field name="braze_campaign_id" type="string" pattern="string">
        <description>
          The Braze campaign identifier to which messages will be sent. Required if you wish to track campaign stats (for example, sends, clicks, bounces, etc).
          @link https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_messages/#request-body
        </description>
      </field>
      <field name="braze_segment_id" type="string" pattern="string">
        <description>
          The Braze segment identifier that defines the target user segment for the message.
          @link https://www.braze.com/docs/api/endpoints/messaging/send_messages/post_send_messages/#request-body
        </description>
      </field>
      <field name="braze_message_variation_id" type="string" pattern="string">
        <description>
          The Braze message variation identifier is used when providing a campaign_id to specify which message variation this message should be tracked under (must be an Kindle/FireOS Push Message).
          @link https://www.braze.com/docs/api/objects_filters/messaging/web_objects/#web-push-object-1
        </description>
      </field>
    </fields>

    <php-options>
      <insertion-points>
        <imports/>
        <methods>
          <![CDATA[
public function getUriTemplateVars(): array
{
    return [
        '_id' => $this->fget('_id'),
    ];
}
          ]]>
        </methods>
      </insertion-points>
    </php-options>

    <js-options>
      <insertion-points>
        <methods>
          <![CDATA[
/**
 * @returns {Object}
 */
getUriTemplateVars() {
  return {
    _id: `${this.get('_id')}`,
  };
}
          ]]>
        </methods>
      </insertion-points>
    </js-options>
  </schema>
</pbj-schema>
